AWSTemplateFormatVersion: 2010-09-09
Description: The template used to create an ECS Cluster together with Terraform.
Parameters:
  ECSClusterName:
    Type: String
    Description: Specifies the ECS Cluster Name with which the resources would be associated
  SecurityGroupIds:
    Type: CommaDelimitedList
    Description: Optional - Specifies the Comma separated list of the Security Group
      Id of an existing Security Group.
  VpcId:
    Type: String
    Description: Optional - Specifies the ID of an existing VPC in which to launch
      your container instances. If you specify a VPC ID, you must specify a list
      of existing subnets in that VPC. If you do not specify a VPC ID, a new VPC
      is created with at least 1 subnet.
    AllowedPattern: ^(?:vpc-[0-9a-f]{8,17}|)$
    ConstraintDescription: VPC Id must begin with 'vpc-' and have a valid uuid
  SubnetIds:
    Type: CommaDelimitedList
    Description: Optional - Specifies the Comma separated list of existing VPC
      Subnet Ids where ECS instances will run
  LatestECSOptimizedAMI:
    Description: AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/kernel-5.10/recommended/image_id
  IamRoleInstanceProfile:
    Type: String
    Description: Specifies the Name or the Amazon Resource Name (ARN) of the
      instance profile associated with the IAM role for the instance
  ECSLaunchTemplateInstanceType:
    Type: String
    Description: Specifies the Instance Type for the Launch Template
  ECSAutoScalingMinSize:
    Type: String
    Description: Specifies de Minimum Instance Size
  ECSAutoScalingMaxSize:
    Type: String
    Description: Specifies de Maximum Instance Size 
  ECSAutoScalingDesiredSize:
    Type: String
    Description: Specifies de Desired Instance Size
Resources:
  ECSLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    DependsOn: ECSCluster
    Properties:
      LaunchTemplateData:
        ImageId:
          Ref: LatestECSOptimizedAMI
        NetworkInterfaces:
          - AssociatePublicIpAddress: false
            DeviceIndex: 0
            DeleteOnTermination: true
            Groups:
              Ref: SecurityGroupIds
        InstanceType:
          Ref: ECSLaunchTemplateInstanceType
        IamInstanceProfile:
          Arn:
            Ref: IamRoleInstanceProfile
        UserData:
          Fn::Base64:
            Fn::Sub:
              - |-
                #!/bin/bash 
                echo ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config;
              - ClusterName:
                  Ref: ECSClusterName
  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: ECSCluster
    Properties:
      MinSize:
        Ref: ECSAutoScalingMinSize
      MaxSize:
        Ref: ECSAutoScalingMaxSize
      DesiredCapacity:
        Ref: ECSAutoScalingDesiredSize
      LaunchTemplate:
        LaunchTemplateId:
          Ref: ECSLaunchTemplate
        Version:
          Fn::GetAtt:
            - ECSLaunchTemplate
            - LatestVersionNumber
      VPCZoneIdentifier:
        Ref: SubnetIds
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value:
            Fn::Join:
              - " - "
              - - ECS Instance
                - Ref: ECSClusterName
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName:
        Ref: ECSClusterName
      ClusterSettings:
        - Name: containerInsights
          Value: disabled
      ServiceConnectDefaults:
        Namespace: temp01
      Tags:
        - Key: Terraform
          Value: "true"
        - Key: Enviroment
          Value: prd
  EC2CapacityProvider:
    Type: AWS::ECS::CapacityProvider
    Properties:
      AutoScalingGroupProvider:
        AutoScalingGroupArn:
          Ref: ECSAutoScalingGroup
        ManagedScaling:
          Status: ENABLED
          TargetCapacity: 100
        ManagedTerminationProtection: DISABLED
  ClusterCPAssociation:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    DependsOn: ECSCluster
    Properties:
      Cluster:
        Ref: ECSClusterName
      CapacityProviders:
        - Ref: EC2CapacityProvider
      DefaultCapacityProviderStrategy:
        - Base: 0
          Weight: 1
          CapacityProvider:
            Ref: EC2CapacityProvider
Outputs:
  ECSCluster:
    Description: The created cluster.
    Value:
      Ref: ECSCluster
